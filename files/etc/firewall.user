# This file is interpreted as shell script.
# Put your custom iptables rules here, they will
# be executed with each firewall (re-)start.

# Allow forwarding in a NAT like way
# ip6tables -A FORWARD -i br-lan -j ACCEPT
# ip6tables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT

# Since we are doing complex forwarding elsewhere, can't do it that way
# and more complex ip6tables are bogus and slow in openwrt so

# These rules are still being debugged but may serve as an example
# 80 and 443 are already allowed in the main rules

# Because these rules are being inserted at the head of the list
# They are in reverse order

TCPPORTS=22,222,636,873,53,25,587,993:994
TCPPORTS2=631,765,1024:65535,119,563
UDPPORTS=53,123,161:162
UDPPORTS2=500,517,518,631,1024:65535

# log the activity that will get dropped (optional)
ip6tables -I INPUT -j LOG
ip6tables -I FORWARD -j LOG
ip6tables -I OUTPUT -j LOG


# Allow crypto

iptables -I INPUT 1 -p 51 -j ACCEPT
iptables -I INPUT 1 -p 50 -j ACCEPT
iptables -I INPUT 1 -p 41 -j ACCEPT
iptables -I INPUT -p 2 -j ACCEPT                                  
ip6tables -I INPUT -p 2 -j ACCEPT                 
iptables -I FORWARD -p 2 -j ACCEPT

# Allow forwarding
#ip6tables -A FORWARD -i br-lan -j ACCEPT
#ip6tables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT

# Allow forwarding
#ip6tables -A FORWARD -i br-guest -j ACCEPT
#ip6tables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT

# Mail over ipv6 is safe because nobody uses it 

#ip6tables -A FORWARD -p tcp -d $MAILSERVER --dport 25 -j ACCEPT
#ip6tables -A FORWARD -p tcp -d $MAILSERVER --dport 143 -j ACCEPT
#ip6tables -A FORWARD -p tcp -d $MAILSERVER --dport 993 -j ACCEPT


# Set the default policy hopefully handled elsewhere
# ip6tables -P INPUT   DROP
# ip6tables -P FORWARD DROP
# ip6tables -P OUTPUT  DROP

# Allow anything on the local loopback link
ip6tables -I INPUT  -i lo -j ACCEPT
ip6tables -I OUTPUT -o lo -j ACCEPT

# Probably a good idea to rate limit this at least from the wan...

ip6tables -I INPUT  -p icmpv6 -j ACCEPT
ip6tables -I OUTPUT -p icmpv6 -j ACCEPT
ip6tables -I FORWARD -p icmpv6 -j ACCEPT

# Allow multicast
ip6tables -I INPUT -s ff00::/8 -j ACCEPT
ip6tables -I OUTPUT -s ff00::/8 -j ACCEPT
ip6tables -I FORWARD -s ff00::/8 -j ACCEPT

# Allow Link-Local addresses
ip6tables -I INPUT -s fe80::/10 -j ACCEPT
ip6tables -I OUTPUT -s fe80::/10 -j ACCEPT

# Allow anything out on the internet
ip6tables -I OUTPUT -o ge01-6to4 -j ACCEPT
ip6tables -I FORWARD -o ge01-6to4 -j ACCEPT

# Match against multiport

ip6tables -I FORWARD -p udp -m multiport --ports $UDPPORTS2 -j ACCEPT
ip6tables -I OUTPUT -p udp -m multiport --ports $UDPPORTS2 -j ACCEPT
ip6tables -I INPUT -p udp -m multiport --ports $UDPPORTS2 -j ACCEPT

ip6tables -I FORWARD -p udp -m multiport --ports $UDPPORTS -j ACCEPT
ip6tables -I OUTPUT -p udp -m multiport --ports $UDPPORTS -j ACCEPT
ip6tables -I INPUT -p udp -m multiport --ports $UDPPORTS -j ACCEPT

ip6tables -I FORWARD -p tcp -m multiport --ports $TCPPORTS2 -j ACCEPT
ip6tables -I OUTPUT -p tcp -m multiport --ports $TCPPORTS2 -j ACCEPT
ip6tables -I INPUT -p tcp -m multiport --ports $TCPPORTS2 -j ACCEPT

ip6tables -I FORWARD -p tcp -m multiport --ports $TCPPORTS -j ACCEPT
ip6tables -I OUTPUT -p tcp -m multiport --ports $TCPPORTS -j ACCEPT
ip6tables -I INPUT -p tcp -m multiport --ports $TCPPORTS -j ACCEPT

# Filter all packets that have RH0 headers:

ip6tables -I INPUT -m rt --rt-type 0 -j DROP
ip6tables -I FORWARD -m rt --rt-type 0 -j DROP
ip6tables -I OUTPUT -m rt --rt-type 0 -j DROP


